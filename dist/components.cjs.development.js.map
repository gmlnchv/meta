{"version":3,"file":"components.cjs.development.js","sources":["../src/components/Token.tsx","../src/theme/components/token.ts","../src/theme/index.ts","../src/provider/index.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Text,\n} from \"@chakra-ui/react\"\n\nimport { cx } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TokenProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Token\"> {\n  value: string\n}\n\n/**\n * Component used to display design tokens or variables.\n */\nexport const Token = forwardRef<TokenProps, \"span\">((props, ref) => {\n  const styles = useStyleConfig(\"Token\", props)\n  const { className, value, ...rest } = omitThemingProps(props)\n\n  return (\n    <Popover placement=\"top\" variant=\"responsive\" trigger=\"hover\" flip={false}>\n      <PopoverTrigger>\n        <chakra.span\n          ref={ref}\n          className={cx(\"dp-token\", props.className)}\n          {...rest}\n          __css={{\n            display: \"inline-block\",\n            whiteSpace: \"nowrap\",\n            verticalAlign: \"middle\",\n            ...styles,\n          }}\n        />\n      </PopoverTrigger>\n      <PopoverContent w=\"auto\">\n        <PopoverBody py={1} textAlign=\"center\">\n          <Text fontSize=\"xs\" my={0} color=\"gray.600\">\n            {value}\n          </Text>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n})\n","export default {\n  baseStyle: {\n    px: 3,\n    py: 1,\n    cursor: \"pointer\",\n    fontSize: \"xs\",\n    fontWeight: \"medium\",\n    border: \"1px\",\n    color: \"gray.600\",\n    borderColor: \"gray.200\",\n    borderRadius: \"full\",\n  },\n}\n","import { extendTheme } from \"@chakra-ui/react\"\nimport Token from \"./components/token\"\n\nexport default extendTheme({\n  components: {\n    Token,\n  },\n})\n","import * as React from \"react\"\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { ChakraProviderProps } from \"@chakra-ui/provider\"\n\nimport theme from \"../theme\"\n\nexport const ThemeProvider: React.FC<ChakraProviderProps> = (props) => {\n  return <ChakraProvider resetCSS={false} {...props} theme={theme} />\n}\n"],"names":["Token","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","value","rest","React","Popover","placement","variant","trigger","flip","PopoverTrigger","chakra","span","className","cx","__css","display","whiteSpace","verticalAlign","PopoverContent","w","PopoverBody","py","textAlign","Text","fontSize","my","color","baseStyle","px","cursor","fontWeight","border","borderColor","borderRadius","extendTheme","components","ThemeProvider","ChakraProvider","resetCSS","theme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;IAGaA,KAAK,gBAAGC,iBAAU,CAAqB,UAACC,KAAD,EAAQC,GAAR;AAClD,MAAMC,MAAM,GAAGC,qBAAc,CAAC,OAAD,EAAUH,KAAV,CAA7B;;AACA,0BAAsCI,uBAAgB,CAACJ,KAAD,CAAtD;AAAA,MAAmBK,KAAnB,qBAAmBA,KAAnB;AAAA,MAA6BC,IAA7B;;AAEA,SACEC,mBAAA,CAACC,aAAD;AAASC,IAAAA,SAAS,EAAC;AAAMC,IAAAA,OAAO,EAAC;AAAaC,IAAAA,OAAO,EAAC;AAAQC,IAAAA,IAAI,EAAE;GAApE,EACEL,mBAAA,CAACM,oBAAD,MAAA,EACEN,mBAAA,CAACO,aAAM,CAACC,IAAR;AACEd,IAAAA,GAAG,EAAEA;AACLe,IAAAA,SAAS,EAAEC,QAAE,CAAC,UAAD,EAAajB,KAAK,CAACgB,SAAnB;KACTV;AACJY,IAAAA,KAAK;AACHC,MAAAA,OAAO,EAAE,cADN;AAEHC,MAAAA,UAAU,EAAE,QAFT;AAGHC,MAAAA,aAAa,EAAE;AAHZ,OAIAnB,MAJA;IAJP,CADF,CADF,EAcEK,mBAAA,CAACe,oBAAD;AAAgBC,IAAAA,CAAC,EAAC;GAAlB,EACEhB,mBAAA,CAACiB,iBAAD;AAAaC,IAAAA,EAAE,EAAE;AAAGC,IAAAA,SAAS,EAAC;GAA9B,EACEnB,mBAAA,CAACoB,UAAD;AAAMC,IAAAA,QAAQ,EAAC;AAAKC,IAAAA,EAAE,EAAE;AAAGC,IAAAA,KAAK,EAAC;GAAjC,EACGzB,KADH,CADF,CADF,CAdF,CADF;AAwBD,CA5B8B;;AC5B/B,cAAe;AACb0B,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE,CADK;AAETP,IAAAA,EAAE,EAAE,CAFK;AAGTQ,IAAAA,MAAM,EAAE,SAHC;AAITL,IAAAA,QAAQ,EAAE,IAJD;AAKTM,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,MAAM,EAAE,KANC;AAOTL,IAAAA,KAAK,EAAE,UAPE;AAQTM,IAAAA,WAAW,EAAE,UARJ;AASTC,IAAAA,YAAY,EAAE;AATL;AADE,CAAf;;ACGA,yBAAeC,iBAAW,CAAC;AACzBC,EAAAA,UAAU,EAAE;AACVzC,IAAAA,KAAK,EAALA;AADU;AADa,CAAD,CAA1B;;ICGa0C,aAAa,GAAkC,SAA/CA,aAA+C,CAACxC,KAAD;AAC1D,SAAOO,mBAAA,CAACkC,oBAAD;AAAgBC,IAAAA,QAAQ,EAAE;KAAW1C;AAAO2C,IAAAA,KAAK,EAAEA;IAAnD,CAAP;AACD,CAFM;;;;;"}